
X = np.array([ [0,0,1],[0,1,1],[1,0,1],[1,1,1] ])

y = np.array([[0,1,1,0]]).T

#### random initialisation of weights - dimensions match required input and output.
syn0 = 2*np.random.random((3,4)) - 1
syn0
syn1 = 2*np.random.random((4,1)) - 1
syn1

#### for loop: 60,000 iterations.
for j in xrange(60000):
    #### multiply X by weights and apply activation function (for both synapses)
    l1 = max(0, np.dot(X,syn0))
    l2 = max(0, np.dot(l1,syn1))
    l2_delta = (y - l2)*(l2*(1-l2))

    l1_delta = l2_delta.dot(syn1.T) * (l1 * (1-l1))

    syn1 += l1.T.dot(l2_delta)

    syn0 += X.T.dot(l1_delta)
